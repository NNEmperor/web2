// <auto-generated />
using System;
using BackProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackProject.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20210517145102_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackProject.Models.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hazard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentIDIncident")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentIDIncident");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("BackProject.Models.ChangedByWhen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("WhenChanged")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhoChanged")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("workRequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("workRequestId");

                    b.ToTable("ChangedByWhen");
                });

            modelBuilder.Entity("BackProject.Models.Device", b =>
                {
                    b.Property<string>("IdDevice")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkRequestId")
                        .HasColumnType("int");

                    b.Property<double>("XCoordinate")
                        .HasColumnType("float");

                    b.Property<double>("YCoordinate")
                        .HasColumnType("float");

                    b.HasKey("IdDevice");

                    b.HasIndex("WorkRequestId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("BackProject.Models.Incident", b =>
                {
                    b.Property<string>("IDIncident")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ATA")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<int>("AffectedUsers")
                        .HasColumnType("int");

                    b.Property<string>("Cause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ETA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ETR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedWorkStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfCalls")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VoltageLevel")
                        .HasColumnType("float");

                    b.HasKey("IDIncident");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("BackProject.Models.WorkRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Emergency")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndWork")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncidentIDIncident")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartWork")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentIDIncident");

                    b.ToTable("WorkRequests");
                });

            modelBuilder.Entity("BackProject.Models.Call", b =>
                {
                    b.HasOne("BackProject.Models.Incident", null)
                        .WithMany("RecievedCalls")
                        .HasForeignKey("IncidentIDIncident");
                });

            modelBuilder.Entity("BackProject.Models.ChangedByWhen", b =>
                {
                    b.HasOne("BackProject.Models.WorkRequest", "workRequest")
                        .WithMany("History")
                        .HasForeignKey("workRequestId");
                });

            modelBuilder.Entity("BackProject.Models.Device", b =>
                {
                    b.HasOne("BackProject.Models.WorkRequest", null)
                        .WithMany("Devices")
                        .HasForeignKey("WorkRequestId");
                });

            modelBuilder.Entity("BackProject.Models.WorkRequest", b =>
                {
                    b.HasOne("BackProject.Models.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentIDIncident");
                });
#pragma warning restore 612, 618
        }
    }
}
